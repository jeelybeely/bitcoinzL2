{"generator":"Code Snippets v3.6.9","date_created":"2025-03-06 22:55","snippets":[{"id":10,"name":"stability-ai-server-handler-cart","code":"add_action('rest_api_init', function() {\n    register_rest_route('custom\/v1', '\/add-to-cart', [\n        'methods' => 'POST',\n        'callback' => 'custom_add_to_cart',\n        'permission_callback' => '__return_true',\n        'args' => [\n            'image_data' => [\n                'required' => true,\n                'validate_callback' => function($param) {\n                    return !empty(trim($param));\n                }\n            ]\n        ]\n    ]);\n});\n\nfunction custom_add_to_cart(WP_REST_Request $request) {\n    \/\/ 1. Check WooCommerce is active\n    if (!class_exists('WooCommerce')) {\n        return new WP_Error('woocommerce_missing', 'WooCommerce is not installed.', ['status' => 500]);\n    }\n\tif (is_null(WC()->cart)) {\n        wc_load_cart();\n    }\n    $cart = WC()->cart;\n    if (!$cart) {\n        return new WP_Error('cart_error', 'Cart initialization failed.', ['status' => 500]);\n    }\n    \/\/ 2. Validate base64 data\n    $base64_data = $request->get_param('image_data');\n    if (empty($base64_data) || !preg_match('\/^[a-zA-Z0-9\\\/\\r\\n+]*={0,2}$\/', $base64_data)) {\n        return new WP_Error('invalid_data', 'Invalid image data.', ['status' => 400]);\n    }\n\n    \/\/ 3. Decode base64\n    $image_data = base64_decode($base64_data);\n    if (!$image_data) {\n        return new WP_Error('decode_failed', 'Failed to decode image data.', ['status' => 400]);\n    }\n\n    \/\/ 4. Initialize WordPress filesystem\n    require_once(ABSPATH . 'wp-admin\/includes\/file.php');\n    WP_Filesystem();\n    global $wp_filesystem;\n\n    \/\/ 5. Save image to uploads directory\n    $upload_dir = wp_upload_dir();\n    $filename = 'custom-sticker-' . md5($base64_data) . '.jpg';\n    $file_path = $upload_dir['path'] . '\/' . $filename;\n    \n    if (!$wp_filesystem->put_contents($file_path, $image_data, FS_CHMOD_FILE)) {\n        return new WP_Error('save_failed', 'Failed to save image.', ['status' => 500]);\n    }\n\n    \/\/ 6. Create media attachment\n    $attachment_id = wp_insert_attachment([\n        'guid' => $upload_dir['url'] . '\/' . $filename,\n        'post_mime_type' => 'image\/jpeg',\n        'post_title' => sanitize_file_name($filename),\n        'post_status' => 'inherit'\n    ], $file_path);\n\n    if (is_wp_error($attachment_id)) {\n        return $attachment_id;\n    }\nerror_log('ATTACHMENT ID: ' . $attachment_id);\nerror_log('ATTACHMENT URL: ' . wp_get_attachment_url($attachment_id));\n    \/\/ 7. Check for existing product with same image\n    $existing_product_id = get_posts([\n        'post_type' => 'product',\n        'meta_query' => [[\n            'key' => '_thumbnail_id',\n            'value' => $attachment_id\n        ]],\n        'fields' => 'ids',\n        'posts_per_page' => 1\n    ]);\n\n    \/\/ 8. Create or reuse product\n\/\/ \u2705 WORKING CODE \u2705\n$template_product_id = 128; \/\/ Confirm this ID matches your product\n\n\/\/ Get parameters from JSON body\n$params = $request->get_json_params();\n$size = preg_replace('\/\\sPlease.+$\/','', sanitize_text_field($params['size'] ?? '3\"x3\"'));\n$quantity = preg_replace('\/\\sBulk.+$\/','', sanitize_text_field($params['quantity'] ?? '50'));\n$material = preg_replace('\/Please Choose.+$\/','', sanitize_text_field($params['material'] ?? 'Vinyl'));\n\n\/\/ Find matching variation\n$product = wc_get_product($template_product_id);\n$variation_id = 0;\n\terror_log('SEARCHING FOR: ' . print_r([\n    'size' => $size,\n    'quantity' => $quantity,\n    'material' => $material\n], true));\n\nerror_log('AVAILABLE VARIATIONS: ' . print_r($product->get_available_variations(), true));\n\n\nforeach($product->get_available_variations() as $variation) {\n    $variation_size = preg_replace('\/[^0-9x\"]\/', '', $variation['attributes']['attribute_size']);\n    $variation_qty = preg_replace('\/[^0-9]\/', '', $variation['attributes']['attribute_quantity']);\n    $variation_material = preg_replace('\/Please Choose a Material\/', '', $variation['attributes']['attribute_material']);\n    \n    if($variation_size === $size && \n       $variation_qty === $quantity && \n       trim($variation_material) === trim($material)) {\n        $variation_id = $variation['variation_id'];\n        break;\n    }\n}\n\n\n$cart_item_key = WC()->cart->add_to_cart(\n    $template_product_id,\n    1, \/\/ Quantity\n    $variation_id, \/\/ Variation ID\n    [], \/\/ Variation attributes (empty)\n    [\n        'custom_design' => $attachment_id \/\/ \u2705 ONLY THIS FIELD\n    ]\n);\nadd_action('woocommerce_before_calculate_totals', function() {\n    foreach(WC()->cart->get_cart() as $cart_item) {\n        if(isset($cart_item['custom_design']) && $cart_item['data'] instanceof WC_Product_Variation) {\n            $cart_item['data']->set_image_id($cart_item['custom_design']);\n\t\t\t $cart_item['data']->save();\n        }\n    }\n}, 9999);\n\terror_log('CART ITEM DATA: ' . print_r(WC()->cart->get_cart(), true));\n\terror_log('ATTACHMENT ID: ' . $attachment_id);\nerror_log('ATTACHMENT URL: ' . wp_get_attachment_url($attachment_id));\n\t\nadd_filter('woocommerce_cart_item_thumbnail', function($image, $cart_item) {\n    if(isset($cart_item['custom_design'])) {\n        return wp_get_attachment_image($cart_item['custom_design'], 'woocommerce_thumbnail', false, [\n            'class' => 'custom-sticker-thumbnail',\n            'loading' => 'eager',\n            'decoding' => 'async'\n        ]);\n    }\n    return $image;\n}, 99, 2);\n\n\/\/ \u2705 ADD THIS \u2705\nif($variation_id) {\n    return rest_ensure_response([\n        'success' => true,\n        'message' => 'Added to cart!',\n        'cart_count' => WC()->cart->get_cart_contents_count()\n    ]);\n}\n\nreturn new WP_Error('cart_error', 'Failed to add to cart', ['status' => 500]);\n\n}","active":true,"modified":"2025-02-28 16:15:43","revision":"65"}]}